{"ast":null,"code":"var _jsxFileName = \"/Users/ozgun/proje-deneme/googleSearchLogic/google-search-logic/src/components/searchbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './assets/styles/index.scss';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  searchValue,\n  searchValueChange\n}) => {\n  _s();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  const isBigScreen = useMediaQuery({\n    query: '(min-width: 1824px)'\n  });\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 1224px)'\n  });\n  const isPortrait = useMediaQuery({\n    query: '(orientation: portrait)'\n  });\n  const isRetina = useMediaQuery({\n    query: '(min-resolution: 2dppx)'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-bar__input\",\n      type: \"text\",\n      placeholder: \"Search anything\",\n      value: searchValue,\n      onChange: searchValueChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-bar__button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"yNdyun4+m45F9/qOSuSo57IrkIg=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  searchValue: PropTypes.string,\n  searchValueChange: PropTypes.array\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/ozgun/proje-deneme/googleSearchLogic/google-search-logic/src/components/searchbar/index.js"],"names":["React","PropTypes","useMediaQuery","SearchBar","searchValue","searchValueChange","isDesktopOrLaptop","query","isBigScreen","isTabletOrMobile","isPortrait","isRetina","propTypes","string","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAwC;AAAA;;AACtD,QAAMC,iBAAiB,GAAGJ,aAAa,CAAC;AACtCK,IAAAA,KAAK,EAAE;AAD+B,GAAD,CAAvC;AAGF,QAAMC,WAAW,GAAGN,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAjC;AACA,QAAME,gBAAgB,GAAGP,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAtC;AACA,QAAMG,UAAU,GAAGR,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,QAAMI,QAAQ,GAAGT,aAAa,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,KAAK,EAAEH,WAJT;AAKE,MAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBD;;GAAMF,S;UACwBD,a,EAGRA,a,EACKA,a,EACNA,a,EACFA,a;;;KAPbC,S;AAsBNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,WAAW,EAAEH,SAAS,CAACY,MADH;AAEpBR,EAAAA,iBAAiB,EAAEJ,SAAS,CAACa;AAFT,CAAtB;AAKA,eAAeX,SAAf","sourcesContent":["import React from 'react'\nimport './assets/styles/index.scss'\nimport PropTypes from 'prop-types'\nimport { useMediaQuery } from 'react-responsive'\n\nconst SearchBar = ({ searchValue, searchValueChange }) => {\n    const isDesktopOrLaptop = useMediaQuery({\n      query: '(min-width: 1224px)'\n    })\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\n  return (\n    <div className=\"search-bar\">\n      <input\n        className=\"search-bar__input\"\n        type=\"text\"\n        placeholder=\"Search anything\"\n        value={searchValue}\n        onChange={searchValueChange}\n      />\n      <button className=\"search-bar__button\">Search</button>\n    </div>\n  )\n}\n\nSearchBar.propTypes = {\n  searchValue: PropTypes.string,\n  searchValueChange: PropTypes.array\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}