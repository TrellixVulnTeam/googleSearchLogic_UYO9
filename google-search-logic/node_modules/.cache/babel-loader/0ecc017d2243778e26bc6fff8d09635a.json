{"ast":null,"code":"var _jsxFileName = \"/Users/ozgun/proje-deneme/googleSearchLogic/google-search-logic/src/components/searchList/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SEARCH_ITEMS } from '../../constants';\nimport './assets/styles/index.scss';\nimport { dynamicSort } from '../../utils';\nimport Pagination from '../pagination';\nimport PropTypes from 'prop-types';\nimport SearchBar from '../searchbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderItems = () => {\n      const {\n        searchValue,\n        orderType,\n        orderValue\n      } = this.props;\n\n      if (searchValue) {\n        const values = this.findExistingSearches(searchValue);\n        const sortedValues = values.sort(dynamicSort(orderValue, orderType));\n        let mappedLis = sortedValues.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"search-list__results__list__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"search-list__results__list__item__title\",\n              children: value.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"search-list__results__list__item__date\",\n              children: value.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this);\n        });\n        return this.props.hasListLimit ? mappedLis.slice(0, 3) : mappedLis;\n      }\n    };\n\n    this.findExistingSearches = searchValue => {\n      return SEARCH_ITEMS.filter(item => item.title.toLowerCase().includes(searchValue.toLowerCase()));\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  render() {\n    const items = this.renderItems();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-list__results\",\n        children: [items && items.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-list__results--not-found\",\n          children: \"Data Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), this.props.hasPagination ? /*#__PURE__*/_jsxDEV(Pagination, {\n          list: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"search-list__results__list\",\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), items && items.length > 0 && this.props.isShowMoreButtonVisible && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"search-list__results__more-button\",\n          to: {\n            pathname: '/searchMore/' + this.props.searchValue\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Show more...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSearchList.defaultProps = {\n  orderType: 'ascending',\n  orderValue: 'title',\n  hasPagination: false,\n  hasListLimit: false,\n  isShowMoreButtonVisible: false\n};\nSearchBar.propTypes = {\n  orderType: PropTypes.string,\n  orderValue: PropTypes.string,\n  hasPagination: PropTypes.bool,\n  hasListLimit: PropTypes.bool,\n  isShowMoreButtonVisible: PropTypes.bool\n};\nexport default SearchList;","map":{"version":3,"sources":["/Users/ozgun/proje-deneme/googleSearchLogic/google-search-logic/src/components/searchList/index.js"],"names":["React","Component","Link","SEARCH_ITEMS","dynamicSort","Pagination","PropTypes","SearchBar","SearchList","constructor","props","renderItems","searchValue","orderType","orderValue","values","findExistingSearches","sortedValues","sort","mappedLis","map","value","index","title","createdAt","hasListLimit","slice","filter","item","toLowerCase","includes","state","list","render","items","length","hasPagination","isShowMoreButtonVisible","pathname","defaultProps","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { SEARCH_ITEMS } from '../../constants'\nimport './assets/styles/index.scss'\nimport { dynamicSort } from '../../utils'\nimport Pagination from '../pagination'\nimport PropTypes from 'prop-types'\nimport SearchBar from '../searchbar'\n\nclass SearchList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: []\n    }\n  }\n  renderItems = () => {\n    const { searchValue, orderType, orderValue } = this.props\n    if (searchValue) {\n      const values = this.findExistingSearches(searchValue)\n      const sortedValues = values.sort(dynamicSort(orderValue, orderType))\n      let mappedLis = sortedValues.map((value, index) => {\n        return (\n          <li key={index} className=\"search-list__results__list__item\">\n            <span className=\"search-list__results__list__item__title\">{value.title}</span>\n            <span className=\"search-list__results__list__item__date\">{value.createdAt}</span>\n          </li>\n        )\n      })\n      return this.props.hasListLimit ? mappedLis.slice(0, 3) : mappedLis\n    }\n  }\n\n  findExistingSearches = (searchValue) => {\n    return SEARCH_ITEMS.filter((item) =>\n      item.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n  }\n  render() {\n    const items = this.renderItems()\n    return (\n      <React.Fragment>\n        <div className=\"search-list__results\">\n          {items && items.length === 0 && (\n            <div className=\"search-list__results--not-found\">Data Not Found</div>\n          )}\n          {this.props.hasPagination ? (\n            <Pagination list={items} />\n          ) : (\n            <ul className=\"search-list__results__list\">{items}</ul>\n          )}\n          {items && items.length > 0 && this.props.isShowMoreButtonVisible && (\n            <Link\n              className=\"search-list__results__more-button\"\n              to={{ pathname: '/searchMore/' + this.props.searchValue }}\n            >\n              <span>Show more...</span>\n            </Link>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nSearchList.defaultProps = {\n  orderType: 'ascending',\n  orderValue: 'title',\n  hasPagination: false,\n  hasListLimit: false,\n  isShowMoreButtonVisible: false\n}\n\nSearchBar.propTypes = {\n  orderType: PropTypes.string,\n  orderValue: PropTypes.string,\n  hasPagination: PropTypes.bool,\n  hasListLimit: PropTypes.bool,\n  isShowMoreButtonVisible: PropTypes.bool\n}\n\nexport default SearchList\n"]},"metadata":{},"sourceType":"module"}